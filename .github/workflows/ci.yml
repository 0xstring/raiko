name: CI

on:
  push:
    branches: ["main"]
  pull_request:

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  RISC0_VERSION: 0.20.1
  RISC0_TOOLCHAIN_VERSION: test-release-2

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-risc0:
    name: Build risc0
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly-2024-01-25
        override: true
    - run: rustc --version
    - uses: risc0/risc0/.github/actions/sccache@release-0.19
    - name: Install cargo-binstall
      uses: cargo-bins/cargo-binstall@v1.6.4
    - run: cargo binstall -y --force cargo-risczero@${{ env.RISC0_VERSION }}
    - run: cargo risczero install --version $RISC0_TOOLCHAIN_VERSION
    - run: cargo build -p risc0-guest

  build-sp1:
    name: Build sp1
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2024-01-25
          override: true
          components: clippy, rustfmt, rust-src
      - run: curl -L https://sp1.succinct.xyz | bash
      - name: Use sp1up
        run: |
          source /home/runner/.bashrc
          sp1up
        shell: bash
      - run: cargo build -p raiko-host --features succinct

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2024-01-25
          override: true
      - uses: actions-rs/cargo@v1
        with: 
          command: check


  lints:
    name: Formatting & Clippy
    runs-on: ubuntu-latest
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: rust-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            ~/.rustup/
          key: clippy-rust-nightly-2024-01-25-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: rust-nightly-2024-01-25-

      - name: Install nightly toolchain
        id: rustc-toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2024-01-25
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
        env:
          CARGO_INCREMENTAL: 1

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --all-targets -- -D warnings -A incomplete-features
        env:
          CARGO_INCREMENTAL: 1
        
